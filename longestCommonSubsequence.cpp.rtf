{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red62\green0\blue63;\red26\green26\blue26;}
\margl1440\margr1440\vieww12740\viewh10060\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
#include <iostream>\
#include <algorithm>\
#include <string>\
#include <vector>\
\
\
int lcs(std::string &X, std::string &Y)\
\{\
\'a0\'a0\'a0 using namespace std;\
\'a0\'a0\'a0 const int m = X.size();\
\'a0\'a0\'a0 const int n = Y.size();\
\'a0\'a0\'a0 const int stride = m + 1;\
\'a0\'a0\'a0 vector<int> L((m + 1)*(n + 1), 0);\
\
\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
\'a0\'a0\'a0 for (int i = 0; i<=m; i++)\
\'a0\'a0\'a0 \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 for (int j = 0; j<=n; j++)\cf2 \expnd0\expndtw0\kerning0
\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if (i == 0 || j == 0)\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 L[i*stride + j] = 0;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 else if (X[i - 1] == Y[j - 1])\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 L[i*stride + j] = L[(i - 1)*stride + j - 1] + 1;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 else\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 L[i*stride + j] = max(L[(i - 1)*stride + j], L[i*stride + j - 1]);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0 \}\
\'a0\'a0\'a0 return L[m*stride + n];\
\
\}\
\
int main()\
\{\
\'a0\'a0\'a0 using namespace std;\
\'a0\'a0\'a0 string X\{ "AGGTAB" \};\
\'a0\'a0\'a0 string Y\{"GXTXAYB"\};\
\
\'a0\'a0\'a0 cout << lcs(X, Y);\
\'a0\'a0\'a0 return 0;\
\}}